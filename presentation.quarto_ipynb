{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"What's New in TidierPlots.jl (2025)\"\n",
        "author: \"Randall Boyes\"\n",
        "format: \n",
        "  revealjs:\n",
        "    theme: night\n",
        "---\n",
        "\n",
        "\n",
        "## About Me\n",
        "\n",
        "- Epidemiologist (Former?)\n",
        "- Currently: Analytics at Presage Group\n",
        "\n",
        "## Thanks to contributors\n",
        "\n",
        "- Karandeep Singh - Tidier\n",
        "- Alex Knudson - Documentation\n",
        "- Connor Robertson - Patchwork, Labels\n",
        "- Daniel Rizk - Documentation, geom_jitter\n",
        "- Pavel Dimens - Logo Design\n",
        "- Jeffrey Chandler - geom_density_2d + friends\n",
        "- Robert Gregg - Project.toml tweaks\n",
        "- You? \n",
        "\n",
        "## The \"tidyverse\"\n",
        "\n",
        "- The best reason to still use R\n",
        "- Comprehensive, connected set of packages for reading, wrangling, and visualizing data\n",
        "\n",
        "## Tidier.jl\n",
        "\n",
        "::: {.incremental}\n",
        "- 100% Julia reimplementation of R's tidyverse\n",
        "    - TidierData.jl - dplyr/tidyr\n",
        "    - TidierDB.jl - dbplyr (Tomorrow 1:40 Main Stage)\n",
        "    - ::: {.fragment .highlight-red}\n",
        "    TidierPlots.jl - ggplot2\n",
        "- See more tomorrow at the \"State of Tidier.jl\" talk (Tomorrow 2:30 Main Stage)! \n",
        ":::\n",
        "\n",
        "## Brief Introduction to ggplot\n",
        "\n",
        "- \"Part of\" the tidyverse\n",
        "- Data visualization\n",
        "- Based on grammar of graphics\n",
        "\n",
        "## \n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| echo: true\n",
        "#| eval: false\n",
        "library(ggplot2)\n",
        "\n",
        "ggplot(mpg, aes(x = displ, y = hwy, colour = class)) + \n",
        "  geom_point()\n",
        "```\n",
        "\n",
        "\n",
        "![](ggplot_1.png){fig-align=\"center\"}\n",
        "\n",
        "##\n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| echo: true\n",
        "#| eval: false\n",
        "library(ggplot2)\n",
        "\n",
        "ggplot(mpg, aes(x = displ, y = hwy, colour = class)) + \n",
        "  geom_point() + geom_line()\n",
        "```\n",
        "\n",
        "\n",
        "![](ggplot_2.png){fig-align=\"center\"}\n",
        "\n",
        "## \n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| echo: true\n",
        "#| eval: false\n",
        "library(ggplot2)\n",
        "\n",
        "ggplot(mpg, aes(x = displ, y = hwy, colour = class)) + \n",
        "  geom_point() + theme_classic()\n",
        "```\n",
        "\n",
        "\n",
        "![](ggplot_3.png){fig-align=\"center\"}\n",
        "\n",
        "## Enter TidierPlots\n",
        "\n",
        "```{julia}\n",
        "using TidierFiles\n",
        "mpg = read_csv(\"mpg.csv\");\n",
        "```\n",
        "\n",
        "```{julia}\n",
        "#| echo: true\n",
        "using TidierPlots\n",
        "\n",
        "ggplot(mpg, aes(x = :displ, y = :hwy, color = :class)) + \n",
        "  geom_point()\n",
        "```\n",
        "\n",
        "\n",
        "## How does it work? \n",
        "\n",
        "TidierPlots.jl provides: \n",
        "    \n",
        "- A set of structs corresponding to ggplot concepts (GGPlot, Geom, Aes, etc.)\n",
        "- Functions that look like ggplot functions that generate those structs\n",
        "- Definitions for operators using those structs (`+`)\n",
        "- A way to translate all of this to `Makie.SpecApi` \n",
        "\n",
        "## What can it do? \n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "ggplot(df) + \n",
        "    geom_point(\n",
        "        aes(x = :x, y = :y, size = :size, color = :x), \n",
        "        alpha = 0.8) +\n",
        "    scale_x_log10() + scale_y_log10() + \n",
        "    labs(x = \"x\", y = \"y\") + lims(y = c(.1, 100)) +\n",
        "    scale_color_continuous(palette = \"Hiroshige\", name = \"\") + theme\n",
        "```\n",
        "\n",
        "\n",
        "![](beautiful_makie.png){fig-align=\"center\"}\n",
        "\n",
        "## What can it do? \n",
        "\n",
        ":::: {.columns}\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "grid = ggplot(df) + theme .+ \n",
        "[geom_histogram(aes(x = :x),\n",
        "    color = (:orangered, 0.5), \n",
        "    strokewidth = 0.5) +\n",
        "    lims(x = c(-4, 4)),\n",
        "blank,\n",
        "geom_histogram(aes(:y), \n",
        "    color = (:dodgerblue, 0.5), \n",
        "    direction = :x, \n",
        "    strokewidth = 0.5) + \n",
        "    lims(y = c(-3, 3)),\n",
        "geom_point(aes(:x, :y), size = 10) +\n",
        "lims(x = c(-4, 4), y = c(-3, 3)) + \n",
        "    labs(x = \"x\", y = \"y\")]\n",
        "+(grid...)\n",
        "```\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "![](patchwork.png)\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## Goals from last year\n",
        "\n",
        "[ ] Fix `aes` operations\n",
        "\n",
        "[ ] `scale_fill` and `scale_alpha`\n",
        "\n",
        "[ ] `facet_grid`\n",
        "\n",
        "[ ] More comprehensive documentation and tutorials\n",
        "\n",
        "## Flying too close to the sun\n",
        "\n",
        "- `ggplot` allows calculated columns to be created within an `aes` call \n",
        "- Implemented the closest syntax to this: \n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "ggplot(data) + geom_point(aes(x = :x/10))\n",
        "```\n",
        "\n",
        "\n",
        "- By defining: \n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "Base.:/(s1::Symbol, s2::Real) = [s1] => AesTransform(make_div_const_fn(s2))\n",
        "```\n",
        "\n",
        "\n",
        "## You wouldn't pirate a type\n",
        "\n",
        "New syntax options: \n",
        "\n",
        "\"DataFrames-style\"\n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "aes(x = :x => x -> x/10)\n",
        "```\n",
        "\n",
        "\n",
        "\"TidierData-style\"\n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "@aes(x = x/10)\n",
        "```\n",
        "\n",
        "\n",
        "In the background, these both resolve to the same `Aes` struct.\n",
        "\n",
        "## Goals from last year\n",
        "\n",
        "[x] Fix `aes` operations\n",
        "\n",
        "[ ] `scale_fill` and `scale_alpha`\n",
        "\n",
        "[ ] `facet_grid`\n",
        "\n",
        "## New Scales\n",
        "\n",
        ":::: {.columns}\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "plot +\n",
        "@aes(fill = bill_depth_mm)) + \n",
        "scale_fill_continuous()\n",
        "```\n",
        "\n",
        "![](fill.png)\n",
        ":::\n",
        "\n",
        "::: {.column width=\"50%\"}\n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "plot +\n",
        "@aes(alpha = bill_depth_mm)) + \n",
        "scale_alpha_continuous()\n",
        "```\n",
        "\n",
        "\n",
        "![](alpha.png)\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## Goals from last year\n",
        "\n",
        "[x] Fix `aes` operations\n",
        "\n",
        "[x] `scale_fill` and `scale_alpha`\n",
        "\n",
        "[ ] `facet_grid`\n",
        "\n",
        "## Facet Grids\n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "plot + facet_grid(rows = :sex, cols = :species)\n",
        "```\n",
        "\n",
        "\n",
        "![](facet_grid.png){fig-align=\"center\"}\n",
        "\n",
        "## Goals from last year\n",
        "\n",
        "[x] Fix `aes` operations\n",
        "\n",
        "[x] `scale_fill` and `scale_alpha`\n",
        "\n",
        "[x] `facet_grid`\n",
        "\n",
        "## Benefits over ggplot\n",
        "\n",
        "- Access to Makie's theming/options\n",
        "- Pluto notebook interactivity\n",
        "- No more dealing with R's handling of fonts and plot scaling\n",
        "\n",
        "## Towards v1.0\n",
        "\n",
        "- More complete documentation \n",
        "- Bug fixes\n",
        "- More geoms!\n",
        "\n",
        "## Towards v1.0\n",
        "\n",
        ":::: {.columns}\n",
        "\n",
        "::: {.column width=\"60%\"}\n",
        "\n",
        "\n",
        "```{julia}\n",
        "#| eval: false\n",
        "#| echo: true\n",
        "\n",
        "geom_raincloud = geom_template(\n",
        "    \"geom_raincloud\", \n",
        "    [\"x\", \"y\"], \n",
        "    :RainClouds)\n",
        "\n",
        "ggplot(penguins) + \n",
        "    geom_raincloud(\n",
        "        aes(x = :species,\n",
        "            y = :bill_depth_mm,\n",
        "            color = :species), \n",
        "        size = 4) +\n",
        "    scale_y_continuous(\n",
        "        labels = \"{:.1f} cm\") + \n",
        "    labs(title = \"Bill Depth by Species\",\n",
        "         x = \"Species\",\n",
        "         y = \"Bill Depth\") +\n",
        "    theme_minimal()\n",
        "```\n",
        "\n",
        ":::\n",
        "\n",
        "::: {.column width=\"40%\"}\n",
        "![](raincloud.png)\n",
        ":::\n",
        "\n",
        "::::\n",
        "\n",
        "## Thanks!\n",
        "\n",
        "- Questions? \n",
        "- github.com/TidierOrg/TidierPlots.jl\n",
        "- bluesky: @randy.pub\n"
      ],
      "id": "f27873d6"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}